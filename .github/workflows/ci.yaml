---
name: ci
on:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
jobs:
  setup_github_runner:
    name: Setup actions runner
    runs-on: ubuntu-latest
    env:
      METAL_AUTH_TOKEN: ${{ secrets.PACKET_AUTH_TOKEN }}
      METAL_PROJECT_ID: ${{ secrets.PACKET_PROJECT_ID }}
      RUNNER_TOKEN: ${{ secrets.RUNNER_TOKEN }}
      SERVER_TYPE: "c3.medium.x86"
      METRO: da
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install metal CLI
        run: |
          curl -L https://github.com/equinix/metal-cli/releases/download/v0.15.0/metal-linux-amd64 -o metal
          chmod +x ./metal
          mv ./metal /usr/local/bin/metal
          metal -v
      - name: Setup ssh
        id: setup_ssh
        run: |
          echo $PACKET_SSH_KEY > /tmp/sshkey
          chmod 600 /tmp/sshkey
          echo "Step1"
          eval `ssh-agent -s`
          echo "Step2"
          ssh-add /tmp/sshkey
          echo "Step3"
          ssh-keygen -f /tmp/sshkey -y > /tmp/sshkey.pub
          echo "Step4"
          metal ssh-key create --key "$(cat /tmp/sshkey.pub)" --label nsm-govpp-builder-ssh -o json | jq -r '.id'
          echo "Step5"
        env:
          PACKET_SSH_KEY: ${{ secrets.PACKET_SSH_KEY }}
      - name: Create server
        run: |
          metal device create -p $METAL_PROJECT_ID -P $SERVER_TYPE -m $METRO -H nsm-govpp-builder -O ubuntu_20_04
          max_retry=10
          counter=0
          until [ "$state" == "active" ]
          do
            sleep 30
            [[ counter -eq $max_retry ]] && echo "Failed!" && exit 1
            state=$(metal device get -p $METAL_PROJECT_ID -o json | jq -r '.[] | select(.hostname=="nsm-govpp-builder") | .state')
            echo "Try #$counter"
            ((counter++))
          done
      - name: Setup actions runner
        working-directory: ${{ github.repository }}
        run: |
          SSH_OPTS="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o IdentitiesOnly=yes -i /tmp/sshkey"
          server_ip=$(metal device get -p $METAL_PROJECT_ID -o json | jq -r '.[] | select(.hostname=="nsm-govpp-builder") | .ip_addresses[] | select(.public==true and .address_family==4) | .address')
          scp ${SSH_OPTS} scripts/setup-actions-runner.sh root@${server_ip}:setup-actions-runner.sh
          ssh ${SSH_OPTS} root@${server_ip} ./setup-actions-runner.sh $RUNNER_TOKEN

  build:
    name: build
    needs: setup_github_runner
    runs-on: self-hosted
    outputs:
      docker_tag: ${{ steps.docker_push.outputs.docker_tag }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: 1.20.5
      - name: Setup actions runner
        run: |
          sleep 180
  delete_github_runner:
    name: Delete actions runner
    needs: build
    runs-on: ubuntu-latest
    env:
      METAL_AUTH_TOKEN: ${{ secrets.PACKET_AUTH_TOKEN }}
      METAL_PROJECT_ID: ${{ secrets.PACKET_PROJECT_ID }}
      RUNNER_TOKEN: ${{ secrets.RUNNER_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Install metal CLI
        run: |
          curl -L https://github.com/equinix/metal-cli/releases/download/v0.15.0/metal-linux-amd64 -o metal
          chmod +x ./metal
          mv ./metal /usr/local/bin/metal
          metal -v
      - name: Delete github runner
        run:
          echo $SSH_KEY > /tmp/sshkey         
          SSH_OPTS="-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o IdentitiesOnly=yes -i /tmp/sshkey"
          server_ip=$(metal device get -p $METAL_PROJECT_ID -o json | jq -r '.[] | select(.hostname=="nsm-govpp-builder") | .ip_addresses[] | select(.public==true and .address_family==4) | .address')
          scp ${SSH_OPTS} scripts/setup-actions-runner.sh root@${server_ip}:delete-actions-runner.sh
          ssh ${SSH_OPTS} root@${server_ip} ./delete-actions-runner.sh $RUNNER_TOKEN
          
          device_id=$(metal device get -p $METAL_PROJECT_ID -o json | jq -r '.[] | select(.hostname=="nsm-govpp-builder") | .id')
          metal device delete -f -i $device_id
          
          ssh_id=$(metal ssh-key get -o json | jq -r '.[] | select(.label=="nsm-govpp-builder-ssh") | .id')
          metal ssh-key delete -f -i $ssh_id
        env:
          SSH_KEY: ${{ secrets.PACKET_SSH_KEY }}

  update_dependent_repositories:
    name: update_dependent_repositories
    needs: build
    if: ${{ github.event_name == 'push' }}
    uses: networkservicemesh/govpp/.github/workflows/update-dependent-repositories.yaml@main
    with:
      docker_tag: ${{ needs.build.outputs.docker_tag }}
    secrets:
      token: ${{ secrets.NSM_BOT_GITHUB_TOKEN }}
